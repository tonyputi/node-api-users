version: '3.8'
services:
    api-users:
        build: .
        image: node-api-users:latest
        container_name: 'node-api-users'
        environment:
            PORT: 80
            MONGODB_URI: mongodb://mongodb:27017/?compressors=zlib&gssapiServiceName=mongodb
            POSTGRES_URI: postgres://mongodb:5432
        restart: unless-stopped
        working_dir: /app
        volumes:
            - node-api-modules:/app/node_modules
            - ./:/app
        ports:
            - '${HTTP_PORT:-8080}:80'
        depends_on: ['mongodb', 'postgres']
    mongodb:
        image: mongo
        container_name: 'node-api-mongodb'
        restart: unless-stopped
        working_dir: /app
        volumes:
            - 'node-api-mongodb:/data/db'
        ports:
            - '${MONGO_PORT:-27017}:27017'
    postgres:
        image: 'postgres:alpine'
        container_name: node-api-postgres
        restart: unless-stopped
        ports:
            - '${POSTGRES_PORT:-5432}:5432'
        environment:
            POSTGRES_PASSWORD: '${DB_PASSWORD:-docker}'
            POSTGRES_DB: '${DB_DATABASE:-api}'
            POSTGRES_USER: '${DB_USERNAME:-docker}'
        volumes:
            - 'node-api-postgres:/var/lib/postgresql/data'
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD:-docker}" ]
            retries: 3
            timeout: 5s

volumes:
    node-api-modules:
        name: node-api-modules
        driver: local
    node-api-mongodb:
        name: node-api-mongodb
        driver: local
    node-api-postgres:
        name: node-api-postgres
        driver: local